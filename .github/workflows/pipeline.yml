name: Deployment Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]
    types: [opened, synchronize]

env:
  DEPLOY_CONDITION: ${{ github.event_name == 'push' && !contains(github.event.head_commit.message, '#skip') }}

jobs:
  deployment_pipeline:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install backend dependencies
        working-directory: ./backend
        run: npm install

      - name: Run backend tests
        working-directory: ./backend
        run: npm run test
        env:
          TEST_MONGODB_URI: ${{ secrets.TEST_MONGODB_URI }}
          SECRET: ${{ secrets.SECRET }}

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm install

      - name: Run frontend tests
        working-directory: ./frontend
        run: npm run test

      - name: Build frontend
        working-directory: ./frontend
        run: npm run build

      - name: Check frontend lint
        working-directory: ./frontend
        run: npm run lint

      - name: Deploy backend to production
        if: env.DEPLOY_CONDITION == 'true'
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          service-id: ${{ secrets.RENDER_BACKEND_SERVICE_ID }}
          api-key: ${{ secrets.RENDER_API_KEY }}

      - name: Deploy frontend to production
        if: env.DEPLOY_CONDITION == 'true'
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          service-id: ${{ secrets.RENDER_FRONTEND_SERVICE_ID }}
          api-key: ${{ secrets.RENDER_API_KEY }}

  tag_release:
    needs: [deployment_pipeline]
    runs-on: ubuntu-20.04
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: '0'

      - name: Bump version and push tag
        if: env.DEPLOY_CONDITION == 'true'
        uses: anothrNick/github-tag-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          DEFAULT_BUMP: patch
